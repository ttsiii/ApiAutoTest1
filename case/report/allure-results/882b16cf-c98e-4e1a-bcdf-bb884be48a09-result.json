{"name": "test_getUserInfo", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "lisi_info = {'password': 123456, 'user_name': 'admin'}\n\n    @pytest.fixture(scope=\"session\",autouse=True)\n    def als_login(lisi_info):\n>       login_ls(lisi_info,'lisi_token')\n\n..\\conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\logintoken.py:82: in login_ls\n    return Login(admin_info,ls_token)\n..\\common\\logintoken.py:45: in __init__\n    result = login1(username=self.username, password=self.password)\n..\\common\\logintoken.py:37: in login1\n    return clent1.send(url, method=method)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.client.HttpClient object at 0x000002042B8B2EF0>\nurl = 'http://121.37.169.128:8201/mall-member/sso/login?platform=test&time=1647502635237&username=admin&password=123456'\nbody = {}, method = 'post', headers = {'Content-Type': 'application/json'}\nsessions = '', x_token = ''\n\n    def send(self,url,body = {},method= {},headers = {},sessions = '',x_token = ''):\n    \n        headers.update(self.default_header)\n        # print(headers)\n        if x_token :\n          headers[\"Authorization\"] = \"Bearer \" +  x_token.strip('\"')  #strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。\n          print(\"token:\",headers)\n        if sessions :\n          headers[\"Session\"] = \"Bearer \" + sessions\n    \n    \n        if method == \"get\":\n          result =  requests.get(url,params = body,headers = headers)\n        elif method == \"post\":\n          # result =  requests.post(url,data = json.dumps(body),headers=headers)\n          result =  requests.post(url,json = body,headers=headers)\n        elif method == \"patch\":\n          result = requests.patch(url,data = json.dumps(body),headers=headers)\n    \n        self.create_response_log(result.status_code,result.json())\n        self.create_request_log(url,method,body,headers)\n        # print(\"result.json()\",result.json()['code'])\n>       assert result.status_code == 200\nE       AssertionError\n\n..\\api\\client.py:42: AssertionError"}, "start": 1647502635171, "stop": 1647502635171, "uuid": "50c59bf7-6b5a-4758-844b-5942f95e783b", "historyId": "6366c9cdd727d5289b92b0a78ff3ee84", "testCaseId": "10edc7b85e210ae380b2b58aff18e1c9", "fullName": "case.test22#test_getUserInfo", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test22"}, {"name": "host", "value": "LAPTOP-9964GMTD"}, {"name": "thread", "value": "21156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test22"}]}