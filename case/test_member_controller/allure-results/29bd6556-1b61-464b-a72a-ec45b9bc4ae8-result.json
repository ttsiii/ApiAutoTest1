{"name": "test_admin_login[case3_用户名密码错误的登录]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "zhangsan_info = {'password': 123456, 'user_name': 'admin'}\n\n    @pytest.fixture(scope=\"session\")\n    def zs_login(zhangsan_info):\n>       return login_zs(zhangsan_info,'zhangsan_token')\n\n..\\conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\common\\logintoken.py:60: in login_zs\n    return Login(admin_info,zs_token)\n..\\..\\common\\logintoken.py:25: in __init__\n    result = self.admin_login()\n..\\..\\common\\logintoken.py:42: in admin_login\n    return self.login(username=self.username, password=self.password)\n..\\..\\common\\logintoken.py:57: in login\n    return self.send(url,method=method)\n..\\..\\api\\client.py:35: in send\n    self.create_response_log(result.status_code,result.json())\nD:\\ruanjian\\python\\lib\\site-packages\\requests\\models.py:910: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\ruanjian\\python\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nD:\\ruanjian\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001E39E508AC8>\ns = '<html>\\n<head>\\n    <title>Charles Error Report</title>\\n    <style type=\"text/css\">\\nbody {\\n    font-family: Arial,...n<i>Charles Proxy, <a href=\"http://www.charlesproxy.com/\">http://www.charlesproxy.com/</a></i>\\n</p>\\n</body>\\n</html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\ruanjian\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "case_data", "value": "{'case_name': 'case3_用户名密码错误的登录', 'body': {'username': 'hhh', 'password': '999999'}, 'expect': {'message': 'Bad credentials', 'code': 500}}"}], "start": 1634992067731, "stop": 1634992067731, "uuid": "c5265524-9782-4b7c-8a3b-1b043a659271", "historyId": "e8e60fbd9f64690605ffb6f55812c06c", "testCaseId": "02c7f242c9f09fbdefa4b8f5b820915e", "fullName": "case.test_member_controller.test_login.Test_DengLu#test_admin_login", "labels": [{"name": "story", "value": "登录功能"}, {"name": "feature", "value": "测试member_controller模块"}, {"name": "parentSuite", "value": "case.test_member_controller"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_DengLu"}, {"name": "host", "value": "LAPTOP-9964GMTD"}, {"name": "thread", "value": "9248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_member_controller.test_login"}]}