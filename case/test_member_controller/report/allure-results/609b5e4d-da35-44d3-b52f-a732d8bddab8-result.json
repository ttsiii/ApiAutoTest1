{"name": "test_admin_login[case1_正常登录]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "lisi_info = {'password': 123456, 'user_name': 'admin'}\n\n    @pytest.fixture(scope=\"session\",autouse=True)\n    def als_login(lisi_info):\n>       login_ls(lisi_info,'lisi_token')\n\n..\\..\\conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\common\\logintoken.py:82: in login_ls\n    return Login(admin_info,ls_token)\n..\\..\\common\\logintoken.py:45: in __init__\n    result = login1(username=self.username, password=self.password)\n..\\..\\common\\logintoken.py:37: in login1\n    return clent1.send(url, method=method)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.client.HttpClient object at 0x0000016B44D82978>\nurl = 'http://121.37.169.128:8201/mall-member/sso/login?platform=test&time=1647170728600&username=admin&password=123456'\nbody = {}, method = 'post', headers = {'Content-Type': 'application/json'}\nsessions = '', x_token = ''\n\n    def send(self,url,body = {},method= {},headers = {},sessions = '',x_token = ''):\n    \n        headers.update(self.default_header)\n        # print(headers)\n        if x_token :\n          headers[\"Authorization\"] = \"Bearer \" +  x_token.strip('\"')  #strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。\n          print(\"token:\",headers)\n        if sessions :\n          headers[\"Session\"] = \"Bearer \" + sessions\n    \n    \n        if method == \"get\":\n          result =  requests.get(url,params = body,headers = headers)\n        elif method == \"post\":\n          # result =  requests.post(url,data = json.dumps(body),headers=headers)\n          result =  requests.post(url,json = body,headers=headers)\n        elif method == \"patch\":\n          result = requests.patch(url,data = json.dumps(body),headers=headers)\n    \n        self.create_response_log(result.status_code,result.json())\n        self.create_request_log(url,method,body,headers)\n        # print(\"result.json()\",result.json()['code'])\n>       assert result.status_code == 200\nE       AssertionError\n\n..\\..\\api\\client.py:42: AssertionError"}, "parameters": [{"name": "case_data", "value": "{'case_name': 'case1_正常登录', 'body': {'username': 'admin', 'password': '123456'}, 'expect': {'message': '操作成功', 'code': 200}}"}], "start": 1647170728530, "stop": 1647170728530, "uuid": "b7b348ee-f6be-45c1-af61-c52f98f29be0", "historyId": "720e3aeef81b3494794bf8842dd359ab", "testCaseId": "02c7f242c9f09fbdefa4b8f5b820915e", "fullName": "case.test_member_controller.test_login.Test_DengLu#test_admin_login", "labels": [{"name": "feature", "value": "测试member_controller模块"}, {"name": "story", "value": "登录功能"}, {"name": "parentSuite", "value": "case.test_member_controller"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_DengLu"}, {"name": "host", "value": "LAPTOP-9964GMTD"}, {"name": "thread", "value": "9088-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_member_controller.test_login"}]}