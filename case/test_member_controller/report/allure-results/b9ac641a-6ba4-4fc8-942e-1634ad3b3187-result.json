{"name": "test_admin_login[case1_正常登录]", "status": "broken", "statusDetails": {"message": "TypeError: option values must be strings", "trace": "lisi_info = {'password': 123456, 'user_name': 'admin'}\n\n    @pytest.fixture(scope=\"session\",autouse=True)\n    def ls_login(lisi_info):\n>       login_ls(lisi_info,'lisi_token')\n\n..\\conftest.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\common\\logintoken.py:64: in login_ls\n    return Login(admin_info,ls_token)\n..\\..\\common\\logintoken.py:38: in __init__\n    config.set(\"token\", \"{}\".format(token))\nD:\\ruanjian\\python\\lib\\configparser.py:1197: in set\n    self._validate_value_types(option=option, value=value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <configparser.ConfigParser object at 0x0000024276042400>\n\n    def _validate_value_types(self, *, section=\"\", option=\"\", value=\"\"):\n        \"\"\"Raises a TypeError for non-string values.\n    \n        The only legal non-string value if we allow valueless\n        options is None, so we need to check if the value is a\n        string if:\n        - we do not allow valueless options, or\n        - we allow valueless options but the value is not None\n    \n        For compatibility reasons this method is not used in classic set()\n        for RawConfigParsers. It is invoked in every case for mapping protocol\n        access and in ConfigParser.set().\n        \"\"\"\n        if not isinstance(section, str):\n            raise TypeError(\"section names must be strings\")\n        if not isinstance(option, str):\n            raise TypeError(\"option keys must be strings\")\n        if not self._allow_no_value or value:\n            if not isinstance(value, str):\n>               raise TypeError(\"option values must be strings\")\nE               TypeError: option values must be strings\n\nD:\\ruanjian\\python\\lib\\configparser.py:1182: TypeError"}, "parameters": [{"name": "case_data", "value": "{'case_name': 'case1_正常登录', 'body': {'username': 'admin', 'password': '123456'}, 'expect': {'message': '操作成功', 'code': 200}}"}], "start": 1637205294953, "stop": 1637205294953, "uuid": "685a7192-c57c-48bf-a1a2-ab81eb872a97", "historyId": "720e3aeef81b3494794bf8842dd359ab", "testCaseId": "02c7f242c9f09fbdefa4b8f5b820915e", "fullName": "case.test_member_controller.test_login.Test_DengLu#test_admin_login", "labels": [{"name": "feature", "value": "测试member_controller模块"}, {"name": "story", "value": "登录功能"}, {"name": "parentSuite", "value": "case.test_member_controller"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_DengLu"}, {"name": "host", "value": "LAPTOP-9964GMTD"}, {"name": "thread", "value": "49500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_member_controller.test_login"}]}